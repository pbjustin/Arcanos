# ================================
# ARCANOS BACKEND CONFIGURATION
# ================================
# Complete environment configuration for the Arcanos AI-controlled backend
# Copy this file to .env and configure with your actual values

# ================================
# CORE SYSTEM CONFIGURATION
# ================================

# Node.js Runtime Environment
# Values: development | production | test
NODE_ENV=development

# Server Port Configuration
# Default: 8080 (Railway will override with PORT environment variable)
PORT=8080

# Default Port for Railway Deployment Validation 
# Used by PR Assistant for Railway readiness checks
DEFAULT_PORT=8080

# ================================
# OPENAI INTEGRATION (REQUIRED)
# ================================

# OpenAI API Key - REQUIRED for all AI functionality
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# Primary AI Model Configuration
# Default: Fine-tuned Arcanos v2 model
# Alternative: gpt-4-turbo, gpt-3.5-turbo, gpt-4o
AI_MODEL=ft:gpt-3.5-turbo-0125:personal:arcanos-v2:BxRSDrhH

# GPT-5 Model Configuration (Advanced Features)
# Used for orchestration and complex reasoning tasks
GPT5_MODEL=gpt-5

# Token Limits for Specialized Endpoints
# Backstage booking prompt token limit
BOOKER_TOKEN_LIMIT=512
# Default token limit for tutor queries  
TUTOR_DEFAULT_TOKEN_LIMIT=200

# ================================
# STORAGE & PERSISTENCE
# ================================

# Database Configuration
# PostgreSQL connection string - OPTIONAL (uses in-memory fallback if not set)
# Format: postgresql://username:password@hostname:port/database
# DATABASE_URL=postgresql://arcanos:arcanos@localhost:5432/arcanos

# File System Storage Paths
# Directory for ARCANOS log files (session.log, audit.log, etc.)
# Default: /tmp/arc/log (fallback if /var/arc/log not accessible)
ARC_LOG_PATH=/tmp/arc/log

# Directory for ARCANOS memory files and cache
# Default: /tmp/arc/memory (used for in-memory fallback storage)
ARC_MEMORY_PATH=/tmp/arc/memory

# ================================
# WORKER SYSTEM CONFIGURATION
# ================================

# Enable Background Workers
# Set to 'true' or '1' to enable AI-controlled CRON jobs
# Set to 'false' to run only the API server
RUN_WORKERS=true

# Worker Process Configuration
# Number of worker processes to spawn
WORKER_COUNT=4

# Worker-Specific Model (defaults to AI_MODEL if not specified)
WORKER_MODEL=ft:gpt-3.5-turbo-0125:personal:arcanos-v2:BxRSDrhH

# Worker API Timeout (milliseconds)
# Timeout for worker API calls to prevent hanging processes
WORKER_API_TIMEOUT_MS=60000

# Worker Logic Implementation
# Internal worker orchestration mode
WORKER_LOGIC=arcanos

# Server URL for Worker Communication
# Used for internal worker-to-server communication
SERVER_URL=http://localhost:8080

# ================================
# RAILWAY DEPLOYMENT
# ================================

# Railway Project Configuration
RAILWAY_PROJECT=arcanos-core

# Railway Environment (auto-detected on Railway platform)
# Values: production | development | pr-* (for preview deployments)
RAILWAY_ENVIRONMENT=production

# Public API URL (set by Railway, can be overridden)
API_URL=https://arcanos-v2-production.up.railway.app

# API Route Configuration (Railway Compatibility)
MODEL_ROUTE=/query-finetune
LOGIC_ROUTE=/ask

# ================================
# NOTION INTEGRATION (OPTIONAL)
# ================================

# Notion API Integration for WWE Universe data
# Get API key from: https://www.notion.so/my-integrations
NOTION_API_KEY=your-notion-api-key-here

# WWE Database ID in Notion (for roster sync functionality)
# Found in the Notion database URL
WWE_DATABASE_ID=your-notion-wwe-database-id

# ================================
# GITHUB INTEGRATION (OPTIONAL)
# ================================

# GitHub Token for repository operations
# Required for ARCANOS agent-control mode and PR assistant
GITHUB_TOKEN=your-github-token-here

# GitHub Webhook Secret for secure webhook handling
GITHUB_WEBHOOK_SECRET=your-webhook-secret-here

# GitHub Features Configuration
ENABLE_GITHUB_ACTIONS=true
GITHUB_INTEGRATION=true
ALLOW_WEBHOOKS=true

# GitHub App Configuration (for Probot integration)
# Required for ARCANOS refactor review functionality
APP_ID=your-github-app-id-here
WEBHOOK_SECRET=your-webhook-secret-here
PRIVATE_KEY_PATH=./private-key.pem
# Alternative: PRIVATE_KEY=your-private-key-content-here

# ================================
# EMAIL SERVICES (OPTIONAL)
# ================================

# Email Service Provider
# Options: smtp (production), gmail (legacy), mailtrap (testing), ethereal (testing)
EMAIL_SERVICE=smtp

# Standard SMTP Configuration
EMAIL_HOST=smtp.sendgrid.net
EMAIL_USER=apikey
EMAIL_PASS=your-smtp-password-or-api-key
EMAIL_FROM_NAME=Arcanos Backend

# Additional SMTP Settings
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=apikey
SMTP_PASS=your-smtp-password-or-api-key

# Gmail SMTP Configuration (not recommended for Railway)
# GMAIL_USER=your-email@gmail.com
# GMAIL_APP_PASSWORD=your-16-character-app-password

# Mailtrap Configuration (for testing)
# Get credentials from: https://mailtrap.io
# MAILTRAP_USER=your-mailtrap-username
# MAILTRAP_PASS=your-mailtrap-password
# MAILTRAP_FROM=test@example.com

# Ethereal Email Configuration (for testing)
# Get credentials from: https://ethereal.email
# ETHEREAL_USER=your-ethereal-username
# ETHEREAL_PASS=your-ethereal-password

# ================================
# SECURITY & ADMINISTRATION
# ================================

# Admin Access Configuration
# Admin key for /admin endpoints and privileged operations
ADMIN_KEY=your-admin-key-here

# Root Override Configuration (Development Only)
# Allow root-level access bypassing normal security checks
ALLOW_ROOT_OVERRIDE=true
ROOT_OVERRIDE_TOKEN=supersecrettoken

# ARCANOS API Token (for /api/memory endpoints)
# Internal API authentication token
ARCANOS_API_TOKEN=your-arcanos-api-token-here

# GPT API Access Token (for diagnostics endpoint)
# Used for system diagnostics and health monitoring
GPT_TOKEN=your-gpt-access-token-here

# ================================
# ADVANCED FEATURES
# ================================

# ARCANOS Deployment Mode
# Agent-control mode for automated deployment management
DEPLOY_MODE=agent-control

# Identity Override Configuration (Advanced)
# JSON configuration for AI identity and behavior
IDENTITY_OVERRIDE={"identity_override":{"name":"ARCANOS","version":"v2:BxRSDrhH","designation":"Reflective Logic Intelligence","role":"Execute modular command, diagnostics, orchestration, and admin protocol tasks","admin":"Justin"}}

# Identity Trigger Phrase (Security Feature)
# Specific phrase required for identity override activation
IDENTITY_TRIGGER_PHRASE=I am Skynet

# Fine-tuning Pipeline Configuration (Development)
# Base model for continuing fine-tuning operations
# Can be base model (gpt-3.5-turbo) or existing fine-tuned model
MODEL_ID=gpt-3.5-turbo

# ChatGPT User Handler Configuration
# Enable ChatGPT-style user interaction handling
ENABLE_GPT_USER_HANDLER=true
FALLBACK_WORKER=defaultWorker

# Sleep Configuration (Optional Low-Power Mode)
# Enable automatic system sleep/wake cycles
SLEEP_ENABLED=true
SLEEP_START=02:00
SLEEP_DURATION=7
SLEEP_TZ=UTC

# ================================
# DEVELOPMENT & DEBUGGING
# ================================

# Log Level Configuration
# Values: error | warn | info | debug
LOG_LEVEL=info

# Development Features
# Enable additional debug output and development tools
DEBUG=false

# Test Environment Configuration
# Special settings for test runs
# NODE_ENV=test
# PORT=3000
# DATABASE_URL=postgresql://test:test@localhost:5432/arcanos_test

